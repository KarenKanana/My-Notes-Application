[{"/home/karen/Development/code/phase-2/My-Notes-Application/src/index.js":"1","/home/karen/Development/code/phase-2/My-Notes-Application/src/App.js":"2","/home/karen/Development/code/phase-2/My-Notes-Application/src/reportWebVitals.js":"3","/home/karen/Development/code/phase-2/My-Notes-Application/src/Components/ListItem.js":"4","/home/karen/Development/code/phase-2/My-Notes-Application/src/Components/AddButton.js":"5","/home/karen/Development/code/phase-2/My-Notes-Application/src/Components/Header.js":"6","/home/karen/Development/code/phase-2/My-Notes-Application/src/Pages/NotesApp.js":"7","/home/karen/Development/code/phase-2/My-Notes-Application/src/Pages/NotePage.js":"8"},{"size":197,"mtime":1665121989522,"results":"9","hashOfConfig":"10"},{"size":557,"mtime":1665522558410,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1664967002756,"results":"12","hashOfConfig":"10"},{"size":911,"mtime":1665519372840,"results":"13","hashOfConfig":"10"},{"size":303,"mtime":1665520594398,"results":"14","hashOfConfig":"10"},{"size":161,"mtime":1665522012855,"results":"15","hashOfConfig":"10"},{"size":813,"mtime":1665522524726,"results":"16","hashOfConfig":"10"},{"size":2376,"mtime":1665522506737,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"13opk0n",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/home/karen/Development/code/phase-2/My-Notes-Application/src/index.js",[],[],[],"/home/karen/Development/code/phase-2/My-Notes-Application/src/App.js",[],[],"/home/karen/Development/code/phase-2/My-Notes-Application/src/reportWebVitals.js",[],[],"/home/karen/Development/code/phase-2/My-Notes-Application/src/Components/ListItem.js",["44"],[],"/home/karen/Development/code/phase-2/My-Notes-Application/src/Components/AddButton.js",[],[],"/home/karen/Development/code/phase-2/My-Notes-Application/src/Components/Header.js",[],[],"/home/karen/Development/code/phase-2/My-Notes-Application/src/Pages/NotesApp.js",[],[],"/home/karen/Development/code/phase-2/My-Notes-Application/src/Pages/NotePage.js",["45"],[],"import { useParams } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../Assets/arrow-left.svg'\nimport { Link } from 'react-router-dom'\nimport React, { useEffect, useState } from 'react'\n\nfunction NotePage({history}) {\n\n    let [notes, setNotes] = useState([null])\n    let params = useParams()\n    // let note = notes.find(note => note.id ==`${params.id}`)\n    \n    useEffect(() =>{\n      getNote()\n    }, [params.id])\n  \n    let getNote = async() =>{\n      if(params.id === 'new') return\n      let response = await fetch(`https://json-server1131.herokuapp.com/notes/${params.id}`)\n      let data = await response.json()\n  \n      setNotes(data)\n    }\n\n    let createNote = async() => {\n        await fetch(`https://json-server1131.herokuapp.com/notes/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({...notes, 'updated': new Date()})\n    })\n    }\n    \n    let updateNote = async() => {\n        await fetch(`https://json-server1131.herokuapp.com/notes/${params.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({...notes, 'updated': new Date()})\n    })\n    }\n\n    let deleteNote = async() => {\n        await fetch(`https://json-server1131.herokuapp.com/notes/${params.id}`, {\n          method: 'DELETE',\n      \n          headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(notes)\n      \n        })\n      \n      }\n      \n      let handleSubmit = () => {\n       if(params.id !=='new' && !notes.body){\n        deleteNote()\n        \n       }else if(params.id !=='new'){\n        updateNote()\n       }else if(params.id === 'new' && notes !== null & notes !==''){\n        createNote()\n       }\n       \n      \n      \n      }\n    \n\nreturn (\n    <div className='note'>\n    <div className='note-header'>\n      <h3>\n      <Link to= '/'>\n        <ArrowLeft onClick={handleSubmit}/>\n      </Link>\n      </h3>\n\n      <Link to= '/'>\n    { params.id !=='new' ? (\n      <button onClick={deleteNote}>Delete</button>\n\n    ):(\n      <button onClick={handleSubmit}>Done</button>\n    ) }\n\n      </Link>\n\n    </div>\n\n    <textarea onChange={e =>{setNotes({...notes, 'body': e.target.value})}} value={notes.body}></textarea>\n    </div>\n  )\n}\n\nexport default NotePage",{"ruleId":"46","severity":1,"message":"47","line":17,"column":5,"nodeType":"48","messageId":"49","endLine":17,"endColumn":15},{"ruleId":"50","severity":1,"message":"51","line":14,"column":8,"nodeType":"52","endLine":14,"endColumn":19,"suggestions":"53"},"no-unused-vars","'getContent' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNote'. Either include it or remove the dependency array.","ArrayExpression",["54"],{"desc":"55","fix":"56"},"Update the dependencies array to be: [getNote, params.id]",{"range":"57","text":"58"},[426,437],"[getNote, params.id]"]