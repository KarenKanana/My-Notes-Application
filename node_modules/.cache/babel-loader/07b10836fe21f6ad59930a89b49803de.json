{"ast":null,"code":"var _jsxFileName = \"/home/karen/Development/code/phase-2/My-Notes-Application/src/Components/NotesPage.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../Assets/arrow-left.svg';\nimport { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NotePage(_ref) {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  let [notes, setNotes] = useState([null]);\n  let params = useParams(); // let note = notes.find(note => note.id ==`${params.id}`)\n\n  useEffect(() => {\n    getNote();\n  }, [params.id]);\n\n  let getNote = async () => {\n    if (params.id === 'new') return;\n    let response = await fetch(`${params.id}`);\n    let data = await response.json();\n    setNotes(data);\n  };\n\n  let createNote = async () => {\n    await fetch(``, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...notes,\n        'updated': new Date()\n      })\n    });\n  };\n\n  let updateNote = async () => {\n    await fetch(`${params.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ ...notes,\n        'updated': new Date()\n      })\n    });\n  };\n\n  let deleteNote = async () => {\n    await fetch(`${params.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(notes)\n    });\n  };\n\n  let handleSubmit = () => {\n    if (params.id !== 'new' && !notes.body) {\n      deleteNote();\n    } else if (params.id !== 'new') {\n      updateNote();\n    } else if (params.id === 'new' && notes !== null & notes !== '') {\n      createNote();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: params.id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteNote,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNotes({ ...notes,\n          'body': e.target.value\n        });\n      },\n      value: notes.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NotePage, \"IL3ZdBTLV3hRlw8Rlkhy5A+0D6E=\", false, function () {\n  return [useParams];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["useParams","ReactComponent","ArrowLeft","Link","React","useEffect","useState","NotePage","history","notes","setNotes","params","getNote","id","response","fetch","data","json","createNote","method","headers","body","JSON","stringify","Date","updateNote","deleteNote","handleSubmit","e","target","value"],"sources":["/home/karen/Development/code/phase-2/My-Notes-Application/src/Components/NotesPage.js"],"sourcesContent":["import { useParams } from 'react-router-dom'\nimport { ReactComponent as ArrowLeft } from '../Assets/arrow-left.svg'\nimport { Link } from 'react-router-dom'\nimport React, { useEffect, useState } from 'react'\n\nfunction NotePage({history}) {\n\n    let [notes, setNotes] = useState([null])\n    let params = useParams()\n    // let note = notes.find(note => note.id ==`${params.id}`)\n    \n    useEffect(() =>{\n      getNote()\n    }, [params.id])\n  \n    let getNote = async() =>{\n      if(params.id === 'new') return\n      let response = await fetch(`${params.id}`)\n      let data = await response.json()\n  \n      setNotes(data)\n    }\n\n    let createNote = async() => {\n        await fetch(``, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({...notes, 'updated': new Date()})\n    })\n    }\n    \n    let updateNote = async() => {\n        await fetch(`${params.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({...notes, 'updated': new Date()})\n    })\n    }\n\n    let deleteNote = async() => {\n        await fetch(`${params.id}`, {\n          method: 'DELETE',\n      \n          headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(notes)\n      \n        })\n      \n      }\n      \n      let handleSubmit = () => {\n       if(params.id !=='new' && !notes.body){\n        deleteNote()\n        \n       }else if(params.id !=='new'){\n        updateNote()\n       }else if(params.id === 'new' && notes !== null & notes !==''){\n        createNote()\n       }\n       \n      \n      \n      }\n    \n\nreturn (\n    <div className='note'>\n    <div className='note-header'>\n      <h3>\n      <Link to= '/'>\n        <ArrowLeft onClick={handleSubmit}/>\n      </Link>\n      </h3>\n\n      <Link to= '/'>\n    { params.id !=='new' ? (\n      <button onClick={deleteNote}>Delete</button>\n\n    ):(\n      <button onClick={handleSubmit}>Done</button>\n    ) }\n\n      </Link>\n\n    </div>\n\n    <textarea onChange={e =>{setNotes({...notes, 'body': e.target.value})}} value={notes.body}></textarea>\n    </div>\n  )\n}\n\nexport default NotePage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}